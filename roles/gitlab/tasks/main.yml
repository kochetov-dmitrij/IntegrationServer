- name: "Create Downloads folder"
  file: path="{{downloads}}" state=directory

- name: "Check if GitLab configuration file already exists."
  stat: path=/etc/gitlab/gitlab.rb
  register: gitlab_config_file

- name: "Check if GitLab is already installed."
  stat: path=/usr/bin/gitlab-ctl
  register: gitlab_file

- name: "Install GitLab dependencies."
  package: name={{item}} state=present
  with_items:
    - openssh-server
    - ca-certificates
    - curl
    - openssl
    - tzdata
    - jq

- block:
  - name: "Download GitLab repository installation script."
    get_url:
      url: "{{gitlab_repository_installation_script_url}}"
      dest: /tmp/gitlab_install_repository.sh
      validate_certs: true
  - name: "Install GitLab repository."
    command: bash /tmp/gitlab_install_repository.sh
  - name: "Install GitLab"
    package: name="{{gitlab_edition}}" state=present
  when: not gitlab_file.stat.exists

- block:
  - name: Set gitlab external url
    lineinfile:
      path: /etc/gitlab/gitlab.rb
      regexp: '^external_url '
      line: external_url '{{gitlab_url}}'
    register: gitlab_url_changed
  - name: Set gitlab port
    lineinfile:
      path: /etc/gitlab/gitlab.rb
      regexp: "unicorn\\['port'\\] = "
      line: unicorn['port'] = {{gitlab_port}}
    register: gitlab_port_changed
  - name: Set gitlab root password
    lineinfile:
      path: /etc/gitlab/gitlab.rb
      regexp: "gitlab_rails\\['initial_root_password'\\] = "
      line: gitlab_rails['initial_root_password'] = "Cg*KxM7NW*"
  - name: Set gitlab default token
    lineinfile:
      path: /etc/gitlab/gitlab.rb
      regexp: "gitlab_rails\\['initial_shared_runners_registration_token'\\] = "
      line: gitlab_rails['initial_shared_runners_registration_token'] = "A3cHPBGbedNW96dgyvvK"

- name: Reconfigure Gitlab
  shell: |
    gitlab-ctl reconfigure
    gitlab-ctl restart unicorn
    gitlab-ctl restart
  when: gitlab_url_changed.changed or gitlab_port_changed.changed


- name: Get Gitlab OAuth2 token of root user
  shell: curl --data "grant_type=password&username=root&password=Cg*KxM7NW*" --request POST {{gitlab_url}}/oauth/token | jq -r '.access_token'
  until: gitlab_token_root.stdout != ''
  retries: 12
  delay: 5
  args:
    warn: no
  register: gitlab_token_root

- name: Create a new GitLab user
  uri:
    method: POST
    url: "{{gitlab_url}}/api/v4/users"
    body_format: form-urlencoded
    status_code: [201,409]
    body:
      access_token: "{{gitlab_token_root.stdout}}"
      email: "{{gitlab_default_user_email}}"
      name: "{{gitlab_default_user_name}}"
      username: "{{gitlab_default_user_login}}"
      password: "{{gitlab_default_user_pass}}"
      skip_confirmation: true

- name: Get Gitlab OAuth2 token of the new user
  shell: curl --data "grant_type=password&username={{gitlab_default_user_login}}&password={{gitlab_default_user_pass}}" --request POST {{gitlab_url}}/oauth/token | jq -r '.access_token'
  register: gitlab_token_user

- name: Create a new repository
  uri:
    method: POST
    url: "{{gitlab_url}}/api/v4/projects"
    body_format: form-urlencoded
    status_code: [201,400]
    body:
      access_token: "{{gitlab_token_user.stdout}}"
      name: "{{repository_name}}"
      visibility: 'public'
      import_url: "{{pull_from}}"
