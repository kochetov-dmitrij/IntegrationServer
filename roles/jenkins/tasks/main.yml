- name: Add an Apt signing key
  apt_key:
    url: https://pkg.jenkins.io/debian/jenkins-ci.org.key
    state: present
- name: Add an Apt repository
  apt_repository:
    repo: deb http://pkg.jenkins.io/debian-stable binary/
    state: present
- name: Install Jenkins
  apt:
    name: jenkins
    state: latest
    update_cache: True
- name: Set port 8081
  lineinfile:
    path: /etc/default/jenkins
    regexp: 'HTTP_PORT=8080'
    line: 'HTTP_PORT=8081'
- name: Disable script security (allow using static methods)
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JAVA_ARGS='
    line: 'JAVA_ARGS="-Djava.awt.headless=true -Dpermissive-script-security.enabled=true"'
- name: Disable Wizard
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JENKINS_ARGS='
    line: 'JENKINS_ARGS="--webroot=/var/cache/$NAME/war --httpPort=$HTTP_PORT -Djenkins.install.runSetupWizard=false"'
- name: Upload Jenkins init script
  template:
    src: init.groovy
    dest: /var/lib/jenkins/init.groovy.d/
    mode: 0744
- name: Add jenkins and vagrant users to docker group
  shell: |
    sudo usermod -aG docker jenkins
    sudo usermod -aG docker vagrant
- name: Restart Jenkins service
  service:
    name: jenkins
    state: restarted
    enabled: yes
- name: Wait for restart
  include_tasks: ready_wait.yml

- name: Get Jenkins token of the admin
  shell: |
     CRUMB=$(curl -sS --cookie-jar ./cookie 'http://{{ jenkins_admin_user }}:{{ jenkins_admin_pass }}@{{ jenkins_url_base }}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)')
     curl -sS --cookie ./cookie -H $CRUMB '{{ jenkins_url }}/me/descriptorByName/jenkins.security.ApiTokenProperty/generateNewToken' -X POST --data 'newTokenName=foo' --user {{ jenkins_admin_user }}:{{ jenkins_admin_pass }} | jq '.data.tokenValue' | sed 's/"//g'
  args:
    warn: false
  register: jenkins_admin_token
- set_fact:
    jenkins_url_with_token: "http://{{ jenkins_admin_user }}:{{ jenkins_admin_token.stdout }}@{{ jenkins_url_base }}"
- debug:
    var: jenkins_url_with_token

- name: Install/update plugins
  include_tasks: plugins.yml

- name: Check if GitLab has jenkins hook
  shell: "curl {{gitlab_url}}/api/v4/projects/1/hooks?access_token={{gitlab_token_user.stdout}} | jq '.[].url'"
  args:
    warn: false
  register: gitlab_hook_status

- name: Add jenkins hook to gitlab
  uri:
    method: POST
    url: "{{gitlab_url}}/api/v4/projects/1/hooks"
    body_format: form-urlencoded
    status_code: [201,409]
    body:
      access_token: "{{gitlab_token_root.stdout}}"
      url: "http://{{jenkins_admin_user}}:{{jenkins_admin_token.stdout}}@{{jenkins_url_base}}/project/DevopsCalculator"
      push_events: true
      merge_requests_events: true
  when: "not 'DevopsCalculator' in gitlab_hook_status.stdout"

- name: Check if Jenkins has GitLab credentials
  uri:
    force_basic_auth: yes
    url: "{{ jenkins_url_with_token }}/credentials/store/system/domain/_/credential/gitlab"
    method: GET
    status_code: [200, 404]
  register: gitlab_credential_status

- name: Add GitLab credentials to Jenkins
  uri:
    force_basic_auth: yes
    url: "{{ jenkins_url_with_token }}/credentials/store/system/domain/_/createCredentials"
    method: POST
    body: "{{ lookup('template', 'credential.xml') }}"
    status_code: [200]
    headers:
      content-type: application/xml
  when:
    - gitlab_credential_status.status == 404
    - gitlab_token_api.stdout != ''

- name: Add Gitlab connection (selenium script)
  script: add_gitlab_connection.py "{{jenkins_url}}" "{{jenkins_admin_user}}" "{{jenkins_admin_pass}}" "{{gitlab_url}}"

- name: Change number of executors to 7
  script: change_num_of_executors.py "{{jenkins_url}}" "{{jenkins_admin_user}}" "{{jenkins_admin_pass}}"

- name: Create Jenkins job
  uri:
    force_basic_auth: yes
    url: "{{ jenkins_url_with_token }}/createItem?name=DevopsCalculator"
    method: POST
    body: "{{ lookup('template', 'job_config.xml') }}"
    status_code: [200, 400]
    headers:
      content-type: application/xml

- name: Create ready/init branch to trigger first build
  shell: |
    cd /tmp/
    rm -rf devopscalculator/
    git clone http://192.168.11.10/gitlab/devopser/devopscalculator.git
    cd devopscalculator/
    if [ -z "`cat README.md | grep kochetov-dmitrij/DevopsCalculator`" ] && [ -z "`git ls-remote --heads http://192.168.11.10/gitlab/devopser/devopscalculator.git ready/init`" ] ; then
      git config --global user.name "devopser"
      git checkout -B ready/init
      sed -i '3i #### Cloned from [kochetov-dmitrij/DevopsCalculator](https://github.com/kochetov-dmitrij/DevopsCalculator)' README.md
      git add -A
      git commit -m "Initial commit to trigger pipeline"
      git push origin ready/init
    fi

